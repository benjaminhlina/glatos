% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim-crw_in_polygon.r
\name{crw_in_polygon}
\alias{crw_in_polygon}
\title{Simulate a correlated random walk inside a polygon}
\usage{
crw_in_polygon(polyg, theta = c(0, 10), stepLen = 100, initPos = c(NA,
  NA), initHeading = NA, nsteps = 30, EPSG = 3175, sp_out = TRUE)
}
\arguments{
\item{polyg}{A \code{\link[sp]{SpatialPolygons}} object.
\cr \emph{OR} \cr
A polygon defined as data frame with numeric columns x and y.}

\item{theta}{A 2-element numeric vector with turn angle parameters 
(theta[1] = mean; theta[2] = sd) from normal distribution.}

\item{stepLen}{A numeric scalar with total distance moved in each step. 
Units are same as the units of the coordinate reference system specified 
by argument \code{EPSG} (meters for the default Great Lakes projected 
coordinate system).}

\item{initPos}{A 2-element numeric vector with initial position
(initPos[1]=x, initPos[2]=y) in same units as \code{polyg}.}

\item{initHeading}{A numeric scalar with initial heading in degrees.}

\item{nsteps}{A numeric scalar with number of steps to simulate.}

\item{EPSG}{Numeric EPSG code of the coordinate system used for simulations. 
Default is 3175, a projected coordinate system for the North American 
Great Lakes Basin and St. Lawrence River system. 
\url{http://spatialreference.org/ref/epsg/nad83-great-lakes-and-st-lawrence-albers/}}

\item{sp_out}{Logical. If TRUE then output is a 
\link[sp]{SpatialPoints} object. If FALSE (default), then output is a 
data.frame.}
}
\value{
A \link[sp]{SpatialPoints} object in the same CRS as the input 
\code{polyg} object. 
\cr \emph{OR} \cr 
A two-column data frame containing:
\item{x}{x coordinates}
\item{y}{y coordinates}
in the same units as \code{polyg}.
\cr See argument \code{sp_out}.
}
\description{
Uses \link{crw} to simulate a random walk as series of equal-length steps 
  with turning angles drawn from a normal distribution inside a polygon.
}
\details{
If initPos = NA, then a starting point is randomly selected within the 
polygon boundary. A path is simulated forward using the crw function. 
Initial heading is also randomly selected if initHeading = NA. When a step 
crosses the polygon boundary, a new heading for that step is drawn and 
the turn angle standard deviation is enlarged slightly for each subsequent 
point that lands outside the polygon.
}
\note{
The path is constructed in segments based on the minimum distance between 
the previous point and the closest polygon boundary.

Simulations are conducted within the coordinate system specified by 
argument \code{EPSG}. The default EPSG (3175), covers only the Great Lakes
of North America. Simulations conducted in other areas will need to specify 
a valid EPSG for the study area.
}
\examples{

#Simple box example
mypolygon <- data.frame(x = c(-50,-50, 50, 50), y = c(-50,50,50,-50))
foo <- crw_in_polygon(mypolygon, theta = c(0, 20), stepLen = 10, 
                      initPos=c(0,0), initHeading=0, nsteps=50)
plot(foo, type = "o", pch = 20, asp = c(1,1), xlim = range(mypolygon$x),
     ylim=range(mypolygon$y))
polygon(mypolygon, border = "red")


#Great Lakes Example
data(greatLakesPoly)

#simulate in great lakes polygon
foo2 <- crw_in_polygon(greatLakesPoly,theta=c(0,25), stepLen=10000,
  initHeading=0, nsteps=100, sp_out = TRUE)

#plot
sp::plot(greatLakesPoly, col = "lightgrey", border = "grey")
points(foo2,type="o", pch = 20, col = "red")

#zoom in
sp::plot(greatLakesPoly, col = "lightgrey", border = "grey", 
  xlim = sp::bbox(foo2)[1,], ylim = sp::bbox(foo2)[2,])
points(foo2,type="o", pch = 20, col = "red")

}
\seealso{
\link{crw}
}
\author{
C. Holbrook \email{cholbrook@usgs.gov}
}
