% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis-make_transition.r
\name{jarasterize}
\alias{jarasterize}
\title{Just another rasterizer}
\usage{
jarasterize(
  x,
  res,
  value = 1,
  bg_value = 0,
  all_touched = TRUE,
  silent = FALSE
)
}
\arguments{
\item{x}{An \code{sf} object (polygon, lines, or points).}

\item{res}{Resolution (raster cell size) in units of \code{x}'s \code{crs}. May be
either a 2-element vector (for lon and lat, respectively) or a single value
(same value used for each dimension).}

\item{value}{The value assigned to cells matching \code{x}.}

\item{bg_value}{The value assigned to cells not matching \code{x}.}

\item{all_touched}{If \code{TRUE} (default), raster will return \code{value} for every
cell touched by polygon (and \code{bg_value} for all others); otherwise, raster
will return \code{value} for all cells whose center points are within the
polygon.}

\item{silent}{If false (default), progress messages are not displayed.}
}
\value{
A \code{raster::rasterLayer} object.
}
\description{
An 'all-touched-capable' rasterizer that depends only on \code{sf} and \code{raster}.
}
\examples{

# Example 1. lon lat WGS input

poly1 <- great_lakes_polygon

plot(sf::st_geometry(poly1))

rast1 <- jarasterize(poly1, res = c(0.1, 0.05))

\dontrun{
# compare to polygon
x11(width = 12, height = 8)
raster::plot(rast1)
plot(sf::st_geometry(poly1), add = TRUE)
}

# Example 2. projected input; 5 km cell size

poly2 <- sf::st_transform(poly1, crs = 3175)

rast2 <- jarasterize(poly2, res = 5000)

\dontrun{
# compare to polygon
x11(width = 12, height = 8)
raster::plot(rast2)
plot(sf::st_geometry(poly2), add = TRUE)
}

# Example 3. projected input; 5 km cell size; all_touched = FALSE

rast3 <- jarasterize(poly2, res = 5000, all_touched = FALSE)

\dontrun{
# compare to polygon
x11(width = 12, height = 8)
raster::plot(rast3)
plot(sf::st_geometry(poly2), add = TRUE)
}

}
