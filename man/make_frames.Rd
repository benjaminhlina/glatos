% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_frames.r
\name{make_frames}
\alias{make_frames}
\title{Create an animated video of spatiotemporal path data}
\usage{
make_frames(proc_obj, recs = NULL, out_dir = getwd(),
  background_ylim = c(41.3, 49), background_xlim = c(-92.45, -75.87),
  show_interpolated = TRUE, tail_dur = 0, animate = TRUE,
  ani_name = "animation.mp4", frame_delete = FALSE, overwrite = FALSE,
  ffmpeg = NA, ...)
}
\arguments{
\item{proc_obj}{A data frame created by
\code{\link{interpolate_path}} function or a data frame containing
'animal_id', 'bin_timestamp', 'latitude', 'longitude', and
'record_type'}

\item{recs}{An optional data frame containing at least four columns with
receiver 'deploy_lat', 'deploy_long', 'deploy_date_time', and
'recover_date_time'. Other columns in object will be ignored.
Default column names match GLATOS standard receiver location file
\cr(e.g., 'GLATOS_receiverLocations_yyyymmdd.csv').}

\item{out_dir}{A character string with file path to directory where 
individual frames for animations will be written. Default is working
directory.}

\item{background_ylim}{Vector of two values specifying the min/max values 
for y-scale of plot. Units are same as background argument.}

\item{background_xlim}{Vector of two values specifying the min/max values 
for x-scale of plot. Units are same as background argument.}

\item{tail_dur}{contains the duration (in same units as \code{proc_obj$bin_timestamp}; 
see \code{\link{interpolate_path}}) of trailing points in each frame. 
Default value is 0 (no trailing points). A value
of \code{Inf} will show all points from start.}

\item{animate}{Boolean. Default (TRUE) creates video animation}

\item{ani_name}{Name of animation (character string)}

\item{frame_delete}{Boolean.  Default (TRUE) delete individual
image frames after animation is created}

\item{overwrite}{Overwite the animation file if it already exists. Default is
FALSE (file is not overwritten)}

\item{ffmpeg}{A character string with path to ffmpeg executable file
(Windows: "ffmpeg.exe", MacOS: "ffmpeg"). The ffmpeg executable is found in
the ffmpeg folder you can download from https://ffmpeg.org/. This argument
is only needed if ffmpeg has not been added to your path variable on your
computer.}

\item{...}{Graphical parameters for plotting fish markers.  Any
argument that can be possed to \code{plot::points}, such as \code{cex =
2}, \code{pch = 21}.}
}
\value{
Sequentially-numbered png files (one for each frame) and 
  one mp4 file will be written to \code{out_dir}.
}
\description{
Create a set of frames (png image files) showing geographic location data
(e.g., detections of tagged fish or interpolated path data) at discrete 
points in time on top of a Great Lakes shapefil and optionally stitches
frames into a video animation (mp4 file).
}
\examples{

# load detection data
det_file <- system.file("extdata", "walleye_detections.zip", package = "glatos")
det_file <- unzip(det_file, "walleye_detections.csv")
dtc <- read_glatos_detections(det_file)

# shrink size to reduce computation time
#dtc <- dtc[1:5000,]

# take a look
head(dtc)

# load receiver location data
rec_file <- system.file("extdata", 
  "receiver_locations_2011.csv", package = "glatos")
recs <- read_glatos_receivers(rec_file)

# call with defaults; linear interpolation
 pos1 <- interpolatePath(dtc)

# make sequential frames and animation
# make sure ffmpeg is installed if argument \\code{animate = TRUE}
# If you have not added path to 'ffmpeg.exe' to your Windows PATH 
# environment variable then you'll need to do that  
# or set path to 'ffmpeg.exe' using the 'ffmpeg' input argument

# make sequential frames but don't make animation  
myDir <- paste0(getwd(),"/frames1")
make_frames(pos1, recs=recs, out_dir=myDir, animate = FALSE)

# make sequential frames, and animate.  Keep both animation and frames and change default color of fish markers to red.
myDir <- paste0(getwd(), "/frames2")
make_frames(pos1, recs=recs, out_dir=myDir, animate = TRUE, col="red")

# make sequential frames, and animate, add 5-day tail
myDir <- paste0(getwd(), "/frames3")
make_frames(pos1, recs=recs, out_dir=myDir, animate = TRUE, tail_dur=5)

# make animation, remove frames.
myDir <- paste0(getwd(), "/frames4")
make_frames(pos1, recs=recs, out_dir=myDir, animate=TRUE)

\dontrun{
# if ffmpeg is not on system path

# windows
myDir <- paste0(getwd(), "/frames5")
make_frames(pos1, recs=recs, out_dir=my_dir, animate=TRUE,
ffmpeg="C://path//to//ffmpeg//bin//ffmpeg.exe")

# mac
myDir <- paste0(getwd(), "/frames6")
make_frames(pos1, recs=recs, outDir=myDir, animate=TRUE, ffmpeg="/path/to/ffmpeg")}

}
\author{
Todd Hayden, Tom Binder, Chris Holbrook
}
